name: Python Package using Conda

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
      max-parallel: 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        environment-file: environment.yml
        activate-environment: test-env  # Create a named environment instead of modifying base
    
    - name: Cache Conda environment
      uses: actions/cache@v4
      with:
        path: ~/conda_pkgs_dir
        key: conda-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('environment.yml') }}
        restore-keys: |
          conda-${{ runner.os }}-${{ matrix.python-version }}-
    
    - name: Install additional dependencies (if needed)
      run: |
        conda install -c conda-forge flake8 pytest  # Install tools in the environment
    
    - name: Lint with Flake8
      run: |
        # Stop the build on Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Additional checks with relaxed rules (warnings only)
        flake8 . --count --max-complexity=10 --max-line-length=127 --statistics || true  # Exit-zero equivalent
    
    - name: Test with Pytest
      run: |
        pytest --tb=short  # Add options like --cov for coverage if desired
